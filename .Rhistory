type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior <- BuildPrior(
dists = c("tnorm", "tnorm", "beta", "tnorm", "tnorm"),
p1    = c(A = 1, B = 1, t0 = 1, mean_v.true = 1, mean_v.false = 1),
p2    = c(1,  1,  1, 1, 1),
lower = c(rep(0, 3),  rep(NA, 2)),
upper = c(rep(NA, 2), 1, rep(NA, 2)))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_2_LBA1S_1e4_tmp.rda")
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior <- BuildPrior(
dists = c("tnorm", "tnorm", "beta", "tnorm", "tnorm"),
p1    = c(A = 1, B = 1, t0 = 1, mean_v.true = 1, mean_v.false = 1),
p2    = c(1,  1,  1, 1, 1),
lower = c(rep(0, 3),  rep(NA, 2)),
upper = c(rep(NA, 2), 1, rep(NA, 2)))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_2_LBA1S_1e4_tmp.rda")
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior <- BuildPrior(
dists = c("tnorm", "tnorm", "beta", "tnorm", "tnorm"),
p1    = c(A = 1, B = 1, t0 = 1, mean_v.true = 1, mean_v.false = 1),
p2    = c(1,  1,  1, 1, 1),
lower = c(rep(0, 3),  rep(NA, 2)),
upper = c(rep(NA, 2), 1, rep(NA, 2)))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_2_LBA1S_1e4_tmp.rda")
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
library(ggdmc)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior <- BuildPrior(
dists = c("tnorm", "tnorm", "beta", "tnorm", "tnorm"),
p1    = c(A = 1, B = 1, t0 = 1, mean_v.true = 1, mean_v.false = 1),
p2    = c(1,  1,  1, 1, 1),
lower = c(rep(0, 3),  rep(NA, 2)),
upper = c(rep(NA, 2), 1, rep(NA, 2)))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_2_LBA1S_1e4_tmp.rda")
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
library(ggdmc)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
library(ggdmc)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior <- BuildPrior(
dists = c("tnorm", "tnorm", "beta", "tnorm", "tnorm"),
p1    = c(A = 1, B = 1, t0 = 1, mean_v.true = 1, mean_v.false = 1),
p2    = c(1,  1,  1, 1, 1),
lower = c(rep(0, 3),  rep(NA, 2)),
upper = c(rep(NA, 2), 1, rep(NA, 2)))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_2_LBA1S_1e4_tmp.rda")
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
library(ggdmc)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior <- BuildPrior(
dists = c("tnorm", "tnorm", "beta", "tnorm", "tnorm"),
p1    = c(A = 1, B = 1, t0 = 1, mean_v.true = 1, mean_v.false = 1),
p2    = c(1,  1,  1, 1, 1),
lower = c(rep(0, 3),  rep(NA, 2)),
upper = c(rep(NA, 2), 1, rep(NA, 2)))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_2_LBA1S_1e4_tmp.rda")
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
thin <- 1
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
library(ggdmc)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior <- BuildPrior(
dists = c("tnorm", "tnorm", "beta", "tnorm", "tnorm"),
p1    = c(A = 1, B = 1, t0 = 1, mean_v.true = 1, mean_v.false = 1),
p2    = c(1,  1,  1, 1, 1),
lower = c(rep(0, 3),  rep(NA, 2)),
upper = c(rep(NA, 2), 1, rep(NA, 2)))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_2_LBA1S_1e4_tmp.rda")
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
thin <- 1
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
setwd("/media/yslin/KIWI/Documents/ggdmc")
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- ggdmc::BuildModel(
p.map     = list(a = "1", v = "1", z = "1", d = "1", sz = "1", sv = "1",
t0 = "1", st0 = "1"),
match.map = list(M = list(s1 = "r1", s2 = "r2")),
factors   = list(S = c("s1", "s2")),
responses = c("r1", "r2"),
constants = c(st0 = 0, d = 0),
type      = "rd")
p.vector <- c(a = 1, v = 1.2, z = .38, sz = .25, sv = .2, t0 = .15)
head(ggdmc:::simulate.model)
dat <- simulate(model, nsim = 1e4, ps = p.vector)
require(ggdmc); require(testthat); require(ggplot2); require(data.table)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(a = "1", v = "1", z = "1", d = "1", sz = "1", sv = "1",
t0 = "1", st0 = "1"),
match.map = list(M = list(s1 = "r1", s2 = "r2")),
factors   = list(S = c("s1", "s2")),
responses = c("r1", "r2"),
constants = c(st0 = 0, d = 0),
type      = "rd")
p.vector <- c(a = 1, v = 1.2, z = .38, sz = .25, sv = .2, t0 = .15)
head(ggdmc:::simulate.model)
p.vector <- c(a = 1, v = 1.2, z = .38, sz = .25, sv = .2, t0 = .15)
dat <- simulate(model, nsim = 1e4, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior  <- BuildPrior(
dists = c(rep("tnorm", 2), "beta", "beta", "tnorm", "beta"),
p1    = c(a = 1, v = 0, z = 1, sz = 1, sv = 1, t0 = 1),
p2    = c(a = 1, v = 2, z = 1, sz = 1, sv = 1, t0 = 1),
lower = c(0, -5, NA, NA, 0, NA),
upper = c(5,  5, NA, NA, 5, NA))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_7_DDM1S_1e4_tmp.rda")
## 6 mins
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
thin <- 1
setwd("/media/yslin/KIWI/Documents/ggdmc")
p2 <- plot(fit0, start = 201)
## Analysis -----------
est <- summary(fit, recovery = TRUE, ps = p.vector, verbose = TRUE)
p1 <- plot(fit0, start = 101)
## Analysis -----------
est <- summary(fit, recovery = TRUE, ps = p.vector, verbose = TRUE)
library(ggdmc)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior <- BuildPrior(
dists = c("tnorm", "tnorm", "beta", "tnorm", "tnorm"),
p1    = c(A = 1, B = 1, t0 = 1, mean_v.true = 1, mean_v.false = 1),
p2    = c(1,  1,  1, 1, 1),
lower = c(rep(0, 3),  rep(NA, 2)),
upper = c(rep(NA, 2), 1, rep(NA, 2)))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_2_LBA1S_1e4_tmp.rda")
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
thin <- 1
p2 <- plot(fit0, start = 201)
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
model <- BuildModel(
p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5, mean_v.false = 1.5)
ntrial <- 1e4
dat <- simulate(model, nsim = ntrial, ps = p.vector)
dmi <- BuildDMI(dat, model)
p.prior <- BuildPrior(
dists = c("tnorm", "tnorm", "beta", "tnorm", "tnorm"),
p1    = c(A = 1, B = 1, t0 = 1, mean_v.true = 1, mean_v.false = 1),
p2    = c(1,  1,  1, 1, 1),
lower = c(rep(0, 3),  rep(NA, 2)),
upper = c(rep(NA, 2), 1, rep(NA, 2)))
plot(p.prior, ps = p.vector)
## Sampling ---------
setwd("/media/yslin/KIWI/Documents/ggdmc_lesson")
path <- c("data/Lesson3/ggdmc_3_2_LBA1S_1e4_tmp.rda")
fit0 <- run(StartNewsamples(5e2, dmi, p.prior))
fit  <- fit0
thin <- 1
## Analysis -----------
est <- summary(fit, start = 201, recovery = TRUE, ps = p.vector, verbose = TRUE)
p2 <- plot(fit0, start = 201)
library(ggdmc)
require(ggdmc); require(testthat); require(ggplot2); require(data.table)
require(ggdmc); require(testthat); require(ggplot2); require(data.table)
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
pmap1 <- list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1")
pmap2 <- list(A = "S", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1")
pmap3 <- list(A = "S", B = "D", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1")
factors1 <- list(A = "1")
match.map1 <- list(M = list(s1 = 1, s2 = 2))
constants <- NULL
type <- "norm"
responses <- c("r1", "r2")
mapinfo1 <- check_BuildModel(pmap1, response, factors1, match.map1, constants,
type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, response, factors1, match.map1, constants,
type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors1, match.map1,
constants, type)
mapinfo1
mapinfo1
mapinfo1 <- ggdmc:::check_BuildModel(NULL, responses, factors1, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, NULL, factors1, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, NULL, match.map1,
constants, type)
factors1
unlist(factors1)
factors2 <- list(S = c("s1", "s2"), F = c("f1", "f2"))
unlist(factors1)
unlist(factors2)
length(unlist(factors))
length(unlist(factors2))
length(unlist(factors1))
length(unique(unlist(factors1)))
length(unique(unlist(factors2)))
factors3 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"))
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors3, match.map1,
constants, type)
length(unlist(factors3))
length(unique(unlist(factors3)))
unlist(factors3)
unique(unlist(factors3))
keywords <- c("1", "s", "R")
keywords
names(factors3)
(names(factors3) %in% keywords)
factors4 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"), R = c("r1", "r2"))
factors4
(names(factors4) %in% keywords)
keywords
names(factors4)
factors4 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"), D = c("d1", "d2"),
R = c("r1", "r2"))
factors5 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"), D = c("d1", "d2"),
R = c("r1", "r2"))
factors4 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"), R = c("r1", "r2"))
factors5 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"), D = c("d1", "d2"),
R = c("r1", "r2"))
if (any (names(factors5) %in% keywords) )
stop("Do not use 1, s, or R as a factor name")
(names(factors5) %in% keywords)
names(factors5)
paste("Do not use ", keywords)
message("Do not use", keywords)
paste("Do not use ", keywords, collapse = ".")
keywords
paste("Do not use ", print(keywords))
message("Do not use", print(keywords))
cat(keywords)
factors5 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"), D = c("d1", "d2"),
R = c("r1", "r2"))
(any (names(factors5) %in% keywords) )
rm(list = ls())
setwd("/media/yslin/KIWI/Documents/ggdmc")
pmap1 <- list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1")
pmap2 <- list(A = "S", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1")
pmap3 <- list(A = "S", B = "D", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1")
factors1 <- list(A = "1")
factors2 <- list(S = c("s1", "s2"), F = c("f1", "f2"))
factors3 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"))
factors4 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"), R = c("r1", "r2"))
factors5 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f2"), D = c("d1", "d2"),
R = c("r1", "r2"))
match.map1 <- list(M = list(s1 = 1, s2 = 2))
constants <- NULL
type <- "norm"
responses <- c("r1", "r2")
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors1, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(NULL, responses, factors1, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, NULL, factors1, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, NULL, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors3, match.map1,
constants, type)
unlist(factors1)
unlist(factors2)
length(unlist(factors1))
length(unlist(factors2))
length(unlist(factors3))
length(unique(unlist(factors1)))
length(unique(unlist(factors2)))
length(unique(unlist(factors3)))
keywords <- c("1", "s", "R")
if ( length(unlist(factors)) != length(unique(unlist(factors))) )
stop("All factors levels must be unqiue")
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors5, match.map1,
constants, type)
factors4 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f3"), R = c("r1", "r2"))
factors5 <- list(S = c("s1", "s2"), F = c("f1", "f2", "f3"), D = c("d1", "d2"),
R = c("r1", "r2"))
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors4, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors3, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors4, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors4, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap1, responses, factors5, match.map1,
constants, type)
pmap4 <- list(A = "S.A", B = "D", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1")
mapinfo1 <- ggdmc:::check_BuildModel(pmap4, responses, factors1, match.map1,
constants, type)
mapinfo1 <- ggdmc:::check_BuildModel(pmap4, responses, factors1, match.map1,
constants, type)
mapinfo1
has_dot <- sapply(strsplit(names(pmap4), "[.]"), length) > 1
has_dot
names(pmap4)
pmap4 <- list(A.S = "S", B = "D", t0 = "1", mean_v = "M", sd_v = "1",
st0 = "1")
mapinfo1 <- ggdmc:::check_BuildModel(pmap4, responses, factors1, match.map1,
constants, type)
pmap5 <- list(A.S = "S", B = "D", t0 = "1", mean_v = "M", sd_v = "1",
st0.S = "1")
mapinfo1 <- ggdmc:::check_BuildModel(pmap5, responses, factors1, match.map1,
constants, type)
pmap6 <- list(A = "S", B = "D", t0 = "1", mean_v = "M", sd_v = "1",
st0.S = "1")
mapinfo1 <- ggdmc:::check_BuildModel(pmap6, responses, factors1, match.map1,
constants, type)
mapinfo <- ggdmc:::check_BuildModel(
p_map     = pmap1,
match_map = NULL,
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
model <- BuildModel(
p.map     = pmap1,
match.map = NULL,
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
pmap7 <- list(A = "1", B = "1", t0 = "1", mean_v = "1", sd_v = "1",
st0 = "1")
model <- BuildModel(
p.map     = pmap7,
match.map = NULL,
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, sd_v = 1),
responses = c("r1", "r2"),
type      = "norm")
