require(ggdmc); require(data.table); require(ggplot2); require(gridExtra)
require(testthat)
context("GLM")

test_that("GLM", {
  rm(list = ls())
  setwd("/media/yslin/KIWI/Documents/ggdmc/")
  model <- BuildModel(
    p.map      = list(a = "1", b = "1", tau = "1"),
    match.map  = NULL,
    regressors = c(8, 15, 22, 29, 36),
    factors    = list(S = c("x1")),
    responses  = "r1",
    constants  = NULL,
    type       = "glm")
  
  npar <- length(GetPNames(model))
  pop.mean <- c(a = 242.7, b = 6.185, tau = 6.086)
  pop.scale <- c(a = 1e-4, b = .04, tau = .04)
  # pop.scale <- c(a = 100, b = 5, tau = 5)
  
  # pop.mean <- c(alpha = 22.7, beta = 6.185, epsilon = 6.086)
  # pop.scale <- c(alpha = 10, beta = 5, epsilon = 5)
  ntrial <- 100
  pop.prior  <-BuildPrior(
    dists = rep("tnorm2", npar),
    p1    = pop.mean,
    p2    = pop.scale,
    lower = c(NA, 0, 0),
    upper = rep(NA, npar))
  plot(pop.prior, ps = pop.mean)
  dat <- simulate(model, nsub = 30, nsim = ntrial, prior = pop.prior)
  dmi <- BuildDMI(dat, model)
  ps <- attr(dat, "parameters")
  colMeans(ps)
  matrixStats::colSds(ps)

  p0 <- ggplot(dat, aes(x = X, y = RT)) +
    geom_point() +
    theme_bw(base_size = 14) +
    facet_wrap(.~s)
  plot(p0)

  ## alpha0    106.527  3.644  99.390 104.100 106.500 108.900 113.702 1.001  4400
  ## alpha.c   242.681  2.766 237.100 240.900 242.700 244.500 248.100 1.001  5900
  ## beta.c      6.189  0.108   5.974   6.118   6.189   6.259   6.404 1.001  6700
  ## sigma       6.103  0.472   5.273   5.768   6.071   6.397   7.117 1.001 12000
  ## alpha.tau   0.005  0.001   0.003   0.004   0.005   0.006   0.008 1.001 12000
  ## beta.tau    4.153  1.565   1.952   3.078   3.879   4.922   8.026 1.001  4400
  ## deviance  967.271 14.901 940.800 956.800 966.300 976.600 999.700 1.001  4100

  pstart <- BuildPrior(
    dists = c("tnorm", "tnorm", "tnorm"),
    p1    = c(a = 242,  b = 6.19, tau = .027),
    p2    = c(a = 14, b = .49, tau = .01),
    lower = c(NA, NA, 0),
    upper = rep(NA, npar))

  lstart <- BuildPrior(
    dists = c("tnorm", "tnorm", "tnorm"),
    p1    = c(a = 200,  b = 5, tau = .01),
    p2    = c(a = 50, b = 1, tau = .01),
    lower = c(NA, NA, 0),
    upper = rep(NA, npar))
  sstart <- BuildPrior(
    dists = c("tnorm", "tnorm", "tnorm"),
    p1    = c(a = 10,  b = .5, tau = .01),
    p2    = c(a = 5, b = .1, tau = .01),
    lower = c(NA, NA, 0),
    upper = rep(NA, npar))
  plot(lstart, ps = c(a = 242,  b = 6.19, tau = .027))
  plot(sstart, ps = c(a = 14, b = .49, tau = .01))
  tmp0 <- List init_newhier_pstart(unsigned int nmc, List data, List pprior, 
                           List ppprior, double rp, unsigned int thin, 
                           unsigned int nchain)
  
    
  p.prior  <- BuildPrior(
    dists = c("tnorm2", "tnorm2", "gamma"),
    p1    = c(a = NA,  b = NA, tau = .001),
    p2    = c(rep(NA, 2), 1000),
    lower = c(NA, NA, 0),
    upper = rep(NA, npar))
  print(p.prior)
  mu.prior  <- BuildPrior(
    dists = c("tnorm2", "tnorm2", NA),
    p1    = c(a = 242.7, b = 6.185, tau = NA),
    p2    = c(a = 1e-4, b = .1e-4, tau = NA),
    lower = c(0, 0, NA),
    upper = rep(NA, npar))
  sigma.prior <- BuildPrior(
    dists = c("gamma", "gamma", NA),
    p1    = c(a = .01, b = .01, tau = NA),
    p2    = c(a = 1000,  b = 1000, tau = NA),
    lower = c(0, 0, NA),
    upper = rep(NA, npar))
  pp.prior <- list(mu.prior, sigma.prior)
  
  plot(mu.prior)
  plot(sigma.prior)
  
  # print(sigma.prior)
  # print(mu.prior)
  # plot(mu.prior)
  # rprior(mu.prior)
  # rprior(sigma.prior)
  
  lstart <- c(a = 150, b = 10, tau = .001) ## replace p1
  sstart <- c(a = 1, b = 1, tau = 1000)    ## replace p2
  
  
  lower <- c(rep(-Inf, 2), 0)
  upper <- rep(Inf, 3)
  lg <- c(1, 1, 1)
  dists <- c(7, 7, 3)
  pnames <- GetPNames(model)
  newpprior <- ggdmc:::RestorePrior(p.prior, lstart, sstart, lower, upper, lg,
                                    dists, pnames)
  print(newpprior)
  plot(newpprior)
  dprior(pvec, newpprior)
  sumloglike()
  sum(log(likelihood_glm(pvec, dmi[[1]])))

  pvec <- c(a = 250, b = 6, tau = 1)
  tmp0 <- ggdmc:::init_new_glm(10, genprior, dmi[[1]], .001, 1, 9)
  tmp0 <- ggdmc:::init_newnonhier_glm(10, dmi, genprior,.001, 1, 9)

  fit0 <- ggdmc:::init_newhier_pstart(500, dmi, p.prior, pp.prior, .001, 2, 9)
  
  
  fit0 <- ggdmc:::init_newhier_hstart(500, dmi, genprior, pp.prior, .001, 2, 9,
                                      pop.mean, pop.scale)
  fit0[[1]]$theta[,,1]
  hyper <- attr(fit0, "hyper")
  hyper$phi[[1]][,,1]
  hyper$phi[[2]][,,1]
  
  
  fit <- run(fit0)
  thin <- 1
  # repeat {
    fit <- run(RestartHypersamples(5e2, fit, thin = thin))
    save(fit0, fit, file = path[1])
    rhat <- hgelman(fit, verbose = TRUE)
    if (all(rhat < 1.2)) break
    thin <- thin * 2
  # }
  cat("Done ", path[1], "\n")
  setwd("/media/yslin/KIWI/Documents/ggdmc/")

  p0 <- plot(fit, hyper = TRUE)
  p0 <- plot(fit, hyper = TRUE, start = 101)
  est1 <- summary(fit, hyper = TRUE, recover = TRUE, ps = pop.mean,  type = 1, verbose = TRUE)
  est2 <- summary(fit, hyper = TRUE, recover = TRUE, ps = pop.scale, type = 2, verbose = TRUE)
  est3 <- summary(fit, recover = TRUE, ps = ps, verbose = TRUE)
  est4 <- summary(fit)

})


