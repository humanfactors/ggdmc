require(ggdmc); require(testthat); require(ggplot2); require(data.table)

  rm(list = ls())
  setwd("/media/yslin/KIWI/Documents/ggdmc")
  ## (P)eople factor, p1: young+female, p2: young+male, p3: old-female, p4: old-male
  ## (S)timuli factor, s0: 0% happiness, s1: 10%, s2: 20%, s3: 30%, s4: 40%,
  ## s5: 50%, s6: 60%, s7: 70%, s8: 80%, s9: 90%, st: 100%
  ## (R)esponse, r1: sad face, r2: happy face
  model <- BuildModel(
    p.map     = list(A = "1", B = "1", t0 = "1", mean_v = c("S", "M"), 
                     sd_v = "1", st0 = "1"),
    match.map = list(M = list(s0 = 1, s1 = 1, s2 = 1, s3 = 1, s4 = 1, s5 = 1,
                              s6 = 2, s7 = 2, s8 = 2, s9 = 2, st = 2)),
    factors   = list(S = c("s0", "s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8",
                           "s9", "st")),
    constants = c(st0 = 0, sd_v = 1),
    responses = c("r1", "r2"),
    type      = "norm")
  pnames <- GetPNames(model)

  p.vector <- c(A = .75, B = 1.25, t0 = .15, seq(4.5, 1.5, length.out = 11),
                round(runif(11, 0, 2), 2))
  names(p.vector) <- pnames
  ntrial <- 500
  dat <- simulate(model, nsim = ntrial, ps = p.vector)
  dmi <- BuildDMI(dat, model)

  p.prior <- BuildPrior(
    dists = c("tnorm", "tnorm", "beta", rep("tnorm", 22)),
    p1    = rep(1, 25),
    p2    = rep(5, 25),
    lower = c(rep(0, 3),  rep(NA, 22)),
    upper = c(rep(NA, 2), 1, rep(NA, 22)))
  names(p.prior) <- pnames
  plot(p.prior, ps = p.vector)

  ## Sampling ---------
  ## fit0 <- StartNewsamples(3, dmi, p.prior)
  fit0 <- run(StartNewsamples(5e2, dmi, p.prior, thin = 2))
  fit  <- fit0
  path <- "data/fit.RData"
  thin <- 2
  repeat {
    fit <- run(RestartSamples(5e2, fit, thin = thin))
    save(fit0, fit, file = path[1])
    rhat <- gelman(fit, verbose = TRUE)
    if (all(rhat$mpsrf < 1.1)) break
    thin <- thin * 2
  }
  cat("Done ", path[1], "\n")
  p0 <- plot(fit)
  p1 <- plot(fit, start = 101)
  p2 <- plot(fit0, start = 201)
  
  # gridExtra::grid.arrange(p0, p1, p2, ncol = 3)
  # d <- data.table(fit$data)
  # d[, .N, .(S)]
  
  ## Analysis -----------
  est <- summary(fit, start = 1, recovery = TRUE, ps = p.vector)
  ## str(est)
  round(est[,pnames], 2)
  #                    A    B   t0 mean_v.s0.true mean_v.s1.true mean_v.s2.true
  # True            0.75 1.25 0.15           4.50           4.20           3.90
  # 2.5% Estimate   0.50 1.09 0.12           4.25           3.97           3.68
  # 50% Estimate    0.69 1.25 0.15           4.40           4.12           3.83
  # 97.5% Estimate  0.84 1.45 0.17           4.57           4.28           3.97
  # Median-True    -0.06 0.00 0.00          -0.10          -0.08          -0.07
  #                mean_v.s3.true mean_v.s4.true mean_v.s5.true mean_v.s6.true
  # True                     3.60           3.30           3.00           2.70
  # 2.5% Estimate            3.43           3.00           2.82           2.47
  # 50% Estimate             3.58           3.14           2.95           2.61
  # 97.5% Estimate           3.73           3.27           3.08           2.74
  # Median-True             -0.02          -0.16          -0.05          -0.09
  # mean_v.s7.true mean_v.s8.true mean_v.s9.true mean_v.st.true
  # True                     2.40           2.10           1.80           1.50
  # 2.5% Estimate            2.19           2.01           1.60           1.37
  # 50% Estimate             2.33           2.16           1.74           1.52
  # 97.5% Estimate           2.46           2.30           1.88           1.66
  # Median-True             -0.07           0.06          -0.06           0.02
  # mean_v.s0.false mean_v.s1.false mean_v.s2.false
  # True                      1.38            0.86            0.22
  # 2.5% Estimate             0.52            0.19           -0.37
  # 50% Estimate              0.95            0.65            0.18
  # 97.5% Estimate            1.33            1.08            0.64
  # Median-True              -0.43           -0.21           -0.04
  # mean_v.s3.false mean_v.s4.false mean_v.s5.false
  # True                      1.65            0.95            0.61
  # 2.5% Estimate             1.34            0.59            0.24
  # 50% Estimate              1.56            0.84            0.52
  # 97.5% Estimate            1.77            1.08            0.77
  # Median-True              -0.09           -0.11           -0.09
  # mean_v.s6.false mean_v.s7.false mean_v.s8.false
  # True                      0.71            0.83            1.99
  # 2.5% Estimate             0.42            0.47            1.72
  # 50% Estimate              0.65            0.70            1.88
  # 97.5% Estimate            0.88            0.90            2.02
  # Median-True              -0.06           -0.13           -0.11
  # mean_v.s9.false mean_v.st.false
  # True                      0.80            1.38
  # 2.5% Estimate             0.51            1.10
  # 50% Estimate              0.69            1.26
  # 97.5% Estimate            0.87            1.41
  # Median-True              -0.11           -0.12
  
