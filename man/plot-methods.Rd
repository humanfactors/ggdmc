% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\docType{methods}
\name{plot}
\alias{plot}
\alias{plot,prior-method}
\alias{plot,posterior-method}
\alias{plot,hyper-method}
\alias{plot,list-method}
\title{ggdmc Plotting Methods}
\usage{
plot(x, y = NULL, ...)

\S4method{plot}{prior}(x, y = NULL, ps = NULL, save = FALSE, ...)

\S4method{plot}{posterior}(x, y = NULL, hyper = FALSE, start = 1,
  end = NA, pll = TRUE, save = FALSE, den = FALSE,
  subchain = FALSE, nsubchain = 3, chains = NA, ...)

\S4method{plot}{hyper}(x, y = NULL, hyper = TRUE, start = 1,
  end = NA, pll = TRUE, save = FALSE, den = FALSE,
  subchain = FALSE, nsubchain = 3, chains = NA, ...)

\S4method{plot}{list}(x, y = NULL, start = 1, end = NA, pll = TRUE,
  save = FALSE, den = FALSE, subchain = FALSE, nsubchain = 3,
  chains = NA, ...)
}
\arguments{
\item{x}{a prior object or posterior samples.}

\item{y}{NULL}

\item{...}{Additional argument passing via dot dot dot.}

\item{ps}{a parameter vector}

\item{save}{a Boolean switch whether to save plotting data}

\item{hyper}{a Boolean switch, indicating posterior samples are from
hierarchical modeling}

\item{start}{start from iteration}

\item{end}{end at which iteraton}

\item{pll}{a Boolean switch whether to plot posterior log likelihoods}

\item{den}{a Boolean switch whether for density plots}

\item{subchain}{a Boolean switch whether to plot a subset of chains.}

\item{nsubchain}{number of subchain}

\item{chains}{indicate the subchains to plot. This must be an integer vector}
}
\description{
The function plots prior distributions or posterior samples depending on
whether the first argument \code{x} is a prior object or an object
storing posterior samples.
}
\examples{
p.prior <- BuildPrior(
           dists = rep("tnorm", 7),
           p1    = c(a = 2,   v.f1 = 4,  v.f2 = 3,  z = 0.5, sv = 1,
                     sz = 0.3, t0 = 0.3),
           p2    = c(a = 0.5, v.f1 = .5, v.f2 = .5, z = 0.1, sv = .3,
                     sz = 0.1, t0 = 0.05),
           lower = c(0,-5, -5, 0, 0, 0, 0),
           upper = c(5, 7,  7, 1, 2, 1, 1))
plot(p.prior)
}
