% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{BuildModel}
\alias{BuildModel}
\title{Create a model object}
\usage{
BuildModel(p.map, responses, factors = list(A = "1"), match.map = NULL,
  constants = numeric(0), type = "norm", posdrift = TRUE,
  verbose = TRUE)
}
\arguments{
\item{p.map}{parameter map. This option maps a particular factorial design
to model parameters}

\item{responses}{specifying the response names and levels}

\item{factors}{specifying a list of factors and their treatment levels}

\item{match.map}{match map. This option matches stimuli and responses}

\item{constants}{specifying the parameters that you want to be fixed.}

\item{type}{the model type defined in the package, "rd", "norm", or "cddm".}

\item{posdrift}{a Boolean, switching between enforcing strict postive drift
rates by using truncated normal distribution. This option is only useful in
"norm" model type.}

\item{verbose}{Print p.vector, constants and model type}
}
\description{
A model object consists of arrays with model attributes.
}
\examples{
## A diffusion decision model
model <- BuildModel(
p.map     = list(a ="1", v = "1",z = "1", d = "1", sz = "1", sv = "1",
                 t0 = "1", st0 = "1"),
match.map = list(M = list(s1 = "r1", s2 ="r2")),
factors   = list(S = c("s1", "s2")),
constants = c(st0 = 0, d = 0),
responses = c("r1", "r2"),
type      = "rd")

## A LBA model
model <- BuildModel(
  p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
                   st0 = "1"),
  match.map = list(M = list(s1 = 1, s2 = 2)),
  factors   = list(S = c("s1", "s2")),
  constants = c(st0 = 0, sd_v = 1),
  responses = c("r1", "r2"),
  type      = "norm")

## A circular diffusion decision model
model <- BuildModel(
  p.map     = list(v1 = "1", v2 = "1", a = "1", t0 = "1", sigma1="1",
                   sigma2="1", eta1="1", eta2="1", tmax="1", h="1"),
  match.map = list(M=list()),
  constants = c(sigma1 = 1, sigma2 = 1, eta1=0, eta2=0, tmax=6, h=1e-4),
  factors   = list(S = c("s1", "s2")),
  responses = paste0('theta_', letters[1:4]),
  type      = "cddm")
}
