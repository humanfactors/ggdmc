% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-class.R
\docType{methods}
\name{simulate,model-method}
\alias{simulate,model-method}
\title{Simulate Choice Responses}
\usage{
\S4method{simulate}{model}(object, nsim = 1, seed = NULL, nsub,
  prior = NA, ps = NA)
}
\arguments{
\item{object}{a model object.}

\item{nsim}{number of observations. \code{nsim} can be a single number
for a balanced design or a matrix for an unbalanced design, where rows
are participants and columns are design cells. If the matrix has one row
than all participants have the same \code{nsim} in each cell, if it has one
column then all cells have the same \code{nsim}; Otherwise each entry
specifies the \code{nsim} for a particular participant x design cell
combination.}

\item{seed}{a user specified random seed.}

\item{nsub}{number of participants}

\item{prior}{a prior object}

\item{ps}{a true parameter vector or matrix.}

\item{...}{additional optional arguments.}
}
\value{
a data frame
}
\description{
The function is an extension of the simulate function in \code{stats}
pacakge. It simulates the data from either two-alternative force choice
tasks, multiple-alternative force choice task, or continuous report tasks.
}
\details{
The function simulates data either for one participant or multiple
participants. The simulation process is based on the model object, entering
via \code{object} argument. For simulating one participant, one must supply
a true parameter vector to the \code{ps} argument.

For simulating multiple participants, one can enter a matrix or a row
vector as true parameters. Each row is used to generate the data for a
participant. This process is usually dubbed the fixed-effect modelling.
To generate data via the random-effect modelling, one must supply a set of
prior distributions. In this case, \code{ps} argument is unused. Note in
some cases, a random-effect modelling may fail to draw data from the model,
because true parameters are randomly drawn
from prior distributions. This would happen sometimes for example in the
diffusion decision model, because certain parameter combinations are
considered invalid (e.g., t0 < 0, zr > a) for obvious reasons.

\code{ps} can be a row vector, in which case each participant has one set
of identical parameters. It can also be a matrix with one row per
participant, in which case it must have \code{ns} rows. The true values will
be saved as \code{parameters} attribute in the output.
}
\examples{
model <- BuildModel(
  p.map     = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1",
                   st0 = "1"),
  match.map = list(M = list(s1 = 1, s2 = 2)),
  factors   = list(S = c("s1", "s2")),
  constants = c(st0 = 0, sd_v = 1),
  responses = c("r1", "r2"),
  type      = "norm")

p.vector <- c(A = .75, B = 1.25, t0 = .15, mean_v.true = 2.5,
              mean_v.false = 1.5)
ntrial <- 100
dat <- simulate(model, nsim = ntrial, ps = p.vector)
}
