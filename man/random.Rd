% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{random}
\alias{random}
\title{Random number generation}
\usage{
random(type, pmat, n, seed = NULL, ...)
}
\arguments{
\item{type}{a character string of the model type}

\item{pmat}{a matrix of response x parameter}

\item{n}{number of observations. This must be an integer.}

\item{seed}{an integer specifying a random seed}

\item{...}{other arguments}
}
\description{
A wrapper function for generating random numbers from different model types,
\code{rd}, \code{norm}, \code{norm_pda}, \code{norm_pda_gpu}, or
\code{cddm}. \code{pmat} is generated usually by \code{TableParameter}.
}
\details{
Note PM model uses \code{norm} type.
}
\examples{
model <- BuildModel(
p.map     = list(a = "1", v="1", z="1", d="1", sz="1", sv="1", t0="1", st0="1"),
match.map = list(M = list(s1 = "r1", s2 = "r2")),
factors   = list(S = c("s1", "s2")),
responses = c("r1","r2"),
constants = c(st0 = 0, d = 0, sv = 0, sz = 0),
type      = "rd")

p.vector <- c(a=1, v=1.5, z=0.6, t0=.15)

pmat <- TableParameters(p.vector, 1, model, FALSE)
type <- model@type;
res1 <- random(type, pmat, 1)
res2 <- random(type, pmat, 10)

model <- BuildModel(
p.map     = list(A = "1", B = "R", t0 = "1", mean_v = c("D", "M"),
                 sd_v = "M", st0 = "1"),
match.map = list(M = list(s1 = 1, s2 = 2)),
factors   = list(S = c("s1", "s2"), D = c("d1", "d2")),
constants = c(sd_v.false = 1, st0 = 0),
responses = c("r1", "r2"),
type      = "norm")

p.vector <- c(A=.51, B.r1=.69, B.r2=.88, t0=.24, mean_v.d1.true=1.1,
              mean_v.d2.true=1.0, mean_v.d1.false=.34, mean_v.d2.false=.02,
              sd_v.true=.11)

pmat <- TableParameters(p.vector, 1, model, FALSE)
type <- model@type;
res1 <- random(type, pmat, 1)
res2 <- random(type, pmat, 10)
}
